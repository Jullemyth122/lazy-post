import Head from 'next/head'
import React, { useState } from 'react'
import Navbar from '../../components/navbar'
import { AuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth'
import { collection, doc, getDocs, onSnapshot, setDoc, updateDoc } from 'firebase/firestore'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { authentication, db,google, facebook, twitter, github } from '../../components/lib/firebase'
import { createAccount } from '@/features/Authentication'
import { useDispatch } from 'react-redux'

const Register = () => {

    const router = useRouter()

    const dispatch = useDispatch()


    const [errors,setErrors] = useState({
        user_:'',
        email_:'',
        pass_:'',
    })
    
    const [username,setUsername] = useState('')
    const [email,setEmail] = useState('')
    const [password,setPassword] = useState('')

    const isValidEmail = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/g;


    const handleSubmit = (e:any) => {
        e.preventDefault()

        if (( username.length >= 5 && email.match(isValidEmail) && password.length >= 6 ) == false) {
            return setErrors({
                user_: username.length >= 5 ? '' : 'Username is not min 5 letters.',
                email_: email.match(isValidEmail) ? '' : "Please Input Email.",
                pass_:password.length >= 6 ? '' : "Password is not at least 6 characters.",
            })
        } 
        else if( username.length >= 5 == false) {
        return setErrors({
            user_: username.length >= 5 ? '' : 'Username is not min 5 letters.',
            email_:'',
            pass_:'',
        })
        } else {
        createUserWithEmailAndPassword(authentication, email, password)
        .then(res => {
            dispatch(createAccount({
                ownerUid:email,
                authEmail:email,
                authUsername:username,
                status:"Online"
            }))
            router.push('/')
        })
        .catch(err => {
    
            if (err.code == 'auth/email-already-in-use') {
            return setErrors({user_: "",email_:"Email is already taken.",pass_:""})
            }
            else if (err.code == 'auth/weak-password') {
            return setErrors({
                user_:"",
                pass_:"Password is not at least 6 characters.",
                email_:"",
            })
            }
            console.log(err.code)
        })
        }

    }


    return (
        <>
        <Head>
            <title> Authentication </title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <Navbar></Navbar>
        <div className='container-fluid'>
            <div className="auth-subfluid">
                <div className="auth-subcomponent">
                    <div className='auth-component'>
                        <div className="row d-flex align-items-center justify-content-center">
                            <div className="login-header col-5">
                                <p>
                                    Register
                                </p>
                            </div>
                        </div>
                        <form onSubmit={handleSubmit}>
                            <div className="input-form">
                                <div className="email-input">
                                    <input type="text" placeholder='Email'
                                        value={email}
                                        onChange={e => setEmail(e.target.value)}
                                    />
                                    <h6>
                                        {errors.email_}      
                                    </h6>
                                </div>
                            </div>
                            <div className="input-form">
                                <div className="email-input">
                                    <input type="text" placeholder='Username'
                                        value={username}
                                        onChange={e => setUsername(e.target.value)}
                                    />
                                    <h6>
                                        {errors.user_}      
                                    </h6>
                                </div>
                            </div>
                            <div className="input-form">
                                <div className="email-input">
                                    <input type="text" placeholder='Password'
                                        value={password}
                                        onChange={e => setPassword(e.target.value)}
                                    />
                                    <h6>
                                        {errors.pass_}      
                                    </h6>
                                </div>
                            </div>

                            <div className="button-form regs">
                                <button className="login">
                                    <div className="circle"></div>
                                    Register
                                </button>
                            </div>

                            <div className="button-form">
                                <h6 className='underline'>
                                    Have an Account?
                                </h6>
                                <button className="fg-pass">
                                    <div className="circle"></div>
                                    <Link href="/auth">
                                        Login
                                    </Link>
                                </button>
                            </div>

                            
                        </form>

                    </div>
                </div>
            </div>
        </div>
        </>
    )
}

export default Register